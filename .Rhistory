source("C:/Users/sdutton/Desktop/SamR/pkids/R/hello.R")
source("C:/Users/sdutton/Desktop/SamR/pkids/R/class_assignment_functions.R")
gc()
library(pkids)
hello()
get_mode()
?pkids
//pkids
??pkids
lea_ids
data("lea_ids")
library(pkids)
load("C:/Users/sdutton/Desktop/SamR/pkids/.RData")
lea_ids
x <-lea_ids
data("lea_ids")
View(lea_ids)
#'
#' @description
#' For use in Student Allocation
#'
#' @details
#' Load in specific entity's student allocation matrix
#'
#' @param lea The LEA code; input in quotes
#'
#' @export
pullMatrix <- function(lea) {
lea_ids %<>% filter(district_code == "lea")
source(paste0("H:/Economists/Ed/KIDS/",lea_ids$folder_name,"/Allocation/Allocation_Matrix_",lea,".R"))
View(runMatrix)
}
pullMatrix("BESD")
pullMatrix("BESD")
pullMatrix("BESD")
library(pkids)
library(pkids)
pullMatrix("BESD")
library(pkids)
pullMatrix("BESD")
lea_ids
lea <- "BESD"
lea_ids %<>% filter(district_code == "lea")
library(pkids)
lea_ids %<>% filter(district_code == "lea")
lea <- "BESD"
lea_ids %<>% filter(district_code == lea)
library(magrittr)
lea_ids %<>% filter(district_code == lea)
?data
data("lea_ids")
lea_ids %<>% filter(district_code == lea)
View(lea_ids)
lea_ids %<>% filter(district_code == "lea")
pullMatrix("BESD")
pullMatrix("BESD")
library(pkids)
library(pkids)
pullMatrix("BESD")
pullMatrix("BCSD")
pullMatrix("BCSD")
View(runMatrix)
pullMatrix("BCSD")
library(pkids)
pullMatrix("BCSD")
library(pkids)
pullMatrix("BCSD")
View(runMatrix)
library(pkids)
library(pkids)
charters <- read_csv("H:/Economists/Ed/KIDS/All Charter Schools/All/Charter IDs Master.csv", col_types = cols())
charters <- read.csv("H:/Economists/Ed/KIDS/All Charter Schools/All/Charter IDs Master.csv", col_types = cols())
charters <- read.csv("H:/Economists/Ed/KIDS/All Charter Schools/All/Charter IDs Master.csv")
save(charters)
usethis::use_data(charters)
charter_ids <- read.csv("H:/Economists/Ed/KIDS/All Charter Schools/All/Charter IDs Master.csv")
usethis::use_data(charter_ids)
library(pkids)
??unique
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
if (is.na(uniqv)) {
print("The mode value is NA")
}
}
x <- c(1,1,1,2,2,2,2,NA, NA, NA,NA, NA,NA)
getmode(x)
}
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(x)
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = T) {
if(na.action == T){
v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
}
getmode(x)
getmode(x, na.action = T)
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = T) {
if(na.action == T){
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
}
getmode(x)
getmode(x, na.action = F)
getmode(x, na.action = T)
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = F) {
if(na.action == T){
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
if(is.na(uniqv), print("The mode value is NA, consider setting na.action = T in the function call"))
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = F) {
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = F) {
if(na.action == T){
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
if(is.na(uniqv){
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.action = T) {
if(na.action == T){
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
}
getmode(x)
getmode(x, na.action = F)
#'
#'@description
#''getmode' returns the mode of a given column
#'
#'@details
#'This function returns the mode value for a given column
#'
#'@param v The column in which we are obtaining a mode value
#'
#'@export
getmode <- function(v, na.omit = T) {
if(na.omit == T){
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
} else {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
}
getmode(x, na.omit = F)
getmode(x, na.omit = T)
document()
library(pkids)
load("C:/Users/sdutton/Desktop/SamR/pkids/data/charter_ids.rda")
View(charter_ids)
charter_ids %<>% mutate(lea_id = ifelse(lea_id == '5496', '186740', lea_id))
library(magrittr)
charter_ids %<>% mutate(lea_id = ifelse(lea_id == '5496', '186740', lea_id))
library(dplyr)
charter_ids %<>% mutate(lea_id = ifelse(lea_id == '5496', '186740', lea_id))
View(charter_ids)
save(charter_ids)
source("C:/Users/sdutton/Desktop/SamR/pkids/R/DataDoc.R")
View(charter_ids)
use_data('charter_ids')
source("C:/Users/sdutton/Desktop/SamR/pkids/R/DataDoc.R")
